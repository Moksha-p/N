# name: Build and Push Container

# on:
#   workflow_dispatch:
#   push:
#     branches: [ "main" ]
#     paths:
#       - "Dockerfile.production"
#       - "compose.prod.yaml"
#       - "requirements.txt"
#       - assets/
#       - reflex_gpt/
#       - rxconfig.py
#       - alembic.ini
#       - alembic/
#       - .github/workflows/build.yaml

# env:
#   # DOCKER_IMAGE: codingforentrepreneurs/reflex-gpt
#   # uncomment if using 
#   DOCKER_IMAGE: ${{ secrets.DOCKERHUB_REPO }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Login to DockerHub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     # For Reflex to build a container,
#     # injecting your environment variables at 
#     # container build time is often required.
#     - name: Create build env file
#       run: |
#          cat << EOF > .build-env
#          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
#          DATABASE_URL=${{ secrets.DATABASE_URL }}
#          EOF

#     - name: Build and push
#       run: |
#         docker build -f Dockerfile.production -t ${{ env.DOCKER_IMAGE }}:latest .
#         docker tag ${{ env.DOCKER_IMAGE }}:latest ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
#         docker push ${{ env.DOCKER_IMAGE }} --all-tags

#     - name: Remove build env file
#       run: rm .build-env


# name: Build and Push Container

# on:
#   workflow_dispatch:
#   push:
#     branches: [ "main" ]
#     paths:
#       - "Dockerfile.production"
#       - "compose.prod.yaml"
#       - "requirements.txt"
#       - "alembic.ini"
#       - ".github/workflows/build.yaml"

# env:
#   DOCKER_IMAGE: ${{ secrets.DOCKERHUB_REPO }}
#   DOCKER_TAG: ${{ github.sha }}

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0  # For proper commit SHA reference

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2
#       with:
#         driver: docker-container
#         buildkitd-flags: --debug

#     - name: Login to DockerHub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}

#     - name: Build and push
#       uses: docker/build-push-action@v4
#       with:
#         file: Dockerfile.production
#         push: true
#         tags: |
#           ${{ env.DOCKER_IMAGE }}:latest
#           ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
#         build-args: |
#           OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
#           DATABASE_URL=${{ secrets.DATABASE_URL }}
#         cache-from: type=gha
#         cache-to: type=gha,mode=max

#     - name: Verify deployment
#       run: |
        # echo "Successfully pushed image:"
        # echo "${{ env.DOCKER_IMAGE }}:latest"
        # echo "${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}"

name: Build and Push Container

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "Dockerfile.production"
      - "requirements.txt"
      - ".github/workflows/build.yaml"

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_REPO }}
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false  # Security best practice

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3  # Updated to v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement network.host

    - name: Login to DockerHub
      uses: docker/login-action@v3  # Updated to v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        file: Dockerfile.production
        platforms: linux/amd64  # Explicit architecture
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        build-args: |
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
        secrets: |
          id=openai_key,env=OPENAI_API_KEY
          id=db_url,env=DATABASE_URL
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: true  # SLSA compliance

    - name: Verify deployment
      run: |
        docker pull ${{ env.DOCKER_IMAGE }}:latest
        docker run --rm ${{ env.DOCKER_IMAGE }}:latest \
          sh -c 'echo $OPENAI_API_KEY | grep -q . && echo "Vars present"'