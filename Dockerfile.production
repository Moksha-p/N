
    # FROM python:3.12-slim AS builder 

    # # Build arguments
    # ARG OPENAI_API_KEY
    # ARG DATABASE_URL
    
    # # Install system dependencies
    # RUN apt-get update && apt-get install -y \
    #     curl \
    #     build-essential \
    #     libpq-dev \
    #     gnupg \
    #     unzip \
    #     && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    #     && apt-get install -y nodejs \
    #     && apt-get clean \
    #     && rm -rf /var/lib/apt/lists/*
    
    # # Create virtual environment
    # RUN python -m venv /opt/venv
    # ENV PATH="/opt/venv/bin:$PATH"
    
    # # Install Python dependencies
    # COPY requirements.txt .
    # RUN pip install --no-cache-dir -r requirements.txt
    
    # # ----------------------------
    # # Runtime stage (uppercase AS)
    # # ----------------------------
    # FROM python:3.12-slim AS runtime  
    
    # # Runtime arguments
    # ARG OPENAI_API_KEY
    # ARG DATABASE_URL
    
    # # Environment variables
    # ENV OPENAI_API_KEY=$OPENAI_API_KEY \
    #     DATABASE_URL=$DATABASE_URL \
    #     REFLEX_ENV_MODE=prod \
    #     NODE_ENV=production \
    #     PYTHONUNBUFFERED=1
    
    # WORKDIR /app
    
    # # Install runtime dependencies
    # RUN apt-get update && apt-get install -y \
    #     libpq5 \
    #     && rm -rf /var/lib/apt/lists/*
    
    # # Copy virtual environment from builder
    # COPY --from=builder /opt/venv /opt/venv
    # ENV PATH="/opt/venv/bin:$PATH"
    
    # # Fix permissions for appuser
    # RUN adduser --disabled-password --gecos '' appuser \
    #     && chown -R appuser:appuser /app  # Critical fix
    
    # USER appuser
    
    # # Copy app files
    # COPY --chown=appuser:appuser . .
    
    # # Run commands
    # CMD ["sh", "-c", "reflex db migrate && reflex run --env prod --backend-only"]


FROM python:3.12-slim AS builder 

# Build arguments
ARG OPENAI_API_KEY
ARG DATABASE_URL

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    libpq-dev \
    gnupg \
    unzip \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# ⬆️ Ensure reflex is upgraded
RUN pip install --no-cache-dir --upgrade reflex

# ----------------------------
# Runtime stage
# ----------------------------
FROM python:3.12-slim AS runtime  

# Runtime arguments
ARG OPENAI_API_KEY
ARG DATABASE_URL

# Environment variables
ENV OPENAI_API_KEY=$OPENAI_API_KEY \
    DATABASE_URL=$DATABASE_URL \
    REFLEX_ENV_MODE=prod \
    NODE_ENV=production \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Fix permissions
RUN adduser --disabled-password --gecos '' appuser \
    && chown -R appuser:appuser /app

USER appuser

# Copy app files
COPY --chown=appuser:appuser . .

# CMD to run app
CMD ["uvicorn", "my_app:app", "--host", "0.0.0.0", "--port", "8000", "--limit-max-requests", "1000"]
